# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

#sudo make install && sudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/chopper/chopper.plymouth 100 && sudo update-alternatives --set default.plymouth /usr/share/plymouth/themes/chopper/chopper.plymouth && sudo update-initramfs -u
#sudo plymouthd; sudo plymouth --show-splash; for ((i=0; i<5; i++)); do sleep 1; sudo plymouth --update=test$i; done; sudo plymouth --quit


# Set Background Color
Window.SetBackgroundTopColor(0, 0, 0);
Window.SetBackgroundBottomColor(0, 0, 0);

# Tinted text #ffffff
Window.Secolour.red = 1.0;
tinted_text_colour.green = 1.0;
tinted_text_colour.blue = 1.0;

#------------------------------Logo-------------------------------

#initiate logo sprite
logo_filename = "chopper.png";
logo_image = Image(logo_filename);

#scale logo sprite to screen
scaled = logo_image.Scale(Window.GetHeight()/4, Window.GetHeight()/4);

logo_sprite = Sprite(scaled);

logo_width = scaled.GetWidth();
logo_height = scaled.GetHeight();
logo_y = Window.GetHeight()/2 - logo_height/2;
logo_x = Window.GetWidth()/2 - logo_width/2;
logo_sprite.SetPosition(logo_x, logo_y, 10);
logo_sprite.SetOpacity(0);


text_filename = "chopper_text.png";
text_image = Image(text_filename);

scaled_text = text_image.Scale(Window.GetWidth()/3, text_image.GetHeight()*(Window.GetWidth()/3)/text_image.GetWidth());

text_sprite = Sprite(scaled_text);

text_width = scaled_text.GetWidth();
text_height = scaled_text.GetHeight();
text_y = Window.GetHeight()/2 - text_height - logo_height/2;
text_x = Window.GetWidth()/2 - text_width/2;
text_sprite.SetPosition(text_x, text_y, 100);
text_sprite.SetOpacity(0);


#------------------------------Load------------------------------------------
# Loading
for (i = 0; i < 250; i++) {
  if (i < 10) {
    temp = Image("000" + i + ".png");
  } else if (i < 100) {
    temp = Image("00" + i + ".png");
  } else {
    temp = Image("0" + i + ".png");
  }
  loading[i] = temp;
}


loading_sprite = Sprite();

# set image position
loading_sprite.SetX(Window.GetX() + (Window.GetWidth(0) / 2 - loading[0].GetWidth() / 2));
loading_sprite.SetY(Window.GetY() + (Window.GetHeight(0) / 2 - loading[0].GetHeight() / 2));
loading_sprite.SetOpacity(1);

index = 0;
fun boot_callback() {
  loading_sprite.SetImage(loading[index]);

  if (index == 230) {
    logo_sprite.SetOpacity(1);
  }
  if (index == 250) {
    text_sprite.SetOpacity(1);
    loading_sprite.SetOpacity(0);
  }
  index++;
}

indexr = 250;
fun reboot_callback() {
  loading_sprite.SetImage(loading[indexr]);
  if (indexr == 190) {
    logo_sprite.SetOpacity(0);
  }
  indexr--;
}

if (Plymouth.GetMode() == "boot") {
    Plymouth.SetRefreshFunction(boot_callback);
}
else {
    logo_sprite.SetOpacity(1);
    Plymouth.SetRefreshFunction(reboot_callback);
}

fun quit_callback() {
    for (i = 1; i <= 150; i++) {
        loading_sprite.SetOpacity(0);
    }
    logo_sprite.SetOpacity(0);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;

    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");

    box.sprite = Sprite(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetY() + Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);

    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);

    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);

    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }

fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);


#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(Window.GetX() + 10, Window.GetY() + 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
